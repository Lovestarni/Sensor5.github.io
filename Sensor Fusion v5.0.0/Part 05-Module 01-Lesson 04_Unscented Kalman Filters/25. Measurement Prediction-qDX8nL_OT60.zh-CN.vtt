WEBVTT
Kind: captions
Language: zh-CN

00:00:00.770 --> 00:00:04.919
你已经成功预测了状态均值和协方差矩阵

00:00:04.918 --> 00:00:09.980
太棒了 这样我们就可以进入更新步骤

00:00:09.980 --> 00:00:11.240
预测测量值了

00:00:12.288 --> 00:00:14.009
这是我们现在的位置

00:00:14.009 --> 00:00:17.079
我们已经成功预测了从时间步 k 到 k+1 的

00:00:17.079 --> 00:00:19.359
状态

00:00:19.359 --> 00:00:22.868
现在 我们必须把预测状态转换为测量空间

00:00:23.910 --> 00:00:28.149
定义转换的函数叫做测量模型

00:00:28.149 --> 00:00:32.250
当然 我们现在必须考虑 哪种传感器生成了

00:00:32.250 --> 00:00:35.530
当前测量值 并使用对应的测量模型

00:00:35.530 --> 00:00:38.079
我们这里的问题和我们在

00:00:38.079 --> 00:00:40.728
预测步骤碰到的问题非常类似

00:00:40.728 --> 00:00:46.149
我们需要通过非线性函数来转换一个分布

00:00:46.149 --> 00:00:49.539
这样我们就能和之前的状态预测一样

00:00:49.539 --> 00:00:52.679
在中心变换中应用同样的函数

00:00:52.679 --> 00:00:57.509
但是 我们这里有两个捷径 可以更简单一些

00:00:57.509 --> 00:00:58.820
我们来看看

00:00:58.820 --> 00:01:03.480
我们在预测步骤做的第一件事 就是生成 sigma点

00:01:03.478 --> 00:01:07.090
在这里 我们可以使用预测均值和协方差矩阵

00:01:07.090 --> 00:01:08.100
同样操作

00:01:09.108 --> 00:01:11.828
但是 有个常用的快捷方式

00:01:11.828 --> 00:01:17.048
那就是 只需重用我们在预测步骤已经有的 sigma点即可

00:01:17.049 --> 00:01:20.250
因此 我们这次可以跳过生成 sigma点

00:01:20.250 --> 00:01:23.909
在这里的情况下 我们还可以跳过扩充步骤

00:01:23.909 --> 00:01:25.189
为什么呢？

00:01:25.188 --> 00:01:28.008
之所以需要扩充 是因为过程噪音

00:01:28.010 --> 00:01:30.690
对状态有非线性影响

00:01:30.688 --> 00:01:34.419
我们假设 本例中有一个雷达测量值

00:01:34.420 --> 00:01:37.890
这里 测量模型是一个非线性函数

00:01:37.890 --> 00:01:41.840
但是测量噪音具备单纯的累加效果

00:01:41.840 --> 00:01:45.090
在本例中 我们不需要进行扩充

00:01:45.090 --> 00:01:48.299
测量噪音有更好的处理方法

00:01:48.299 --> 00:01:50.179
后面我会具体说明

00:01:51.280 --> 00:01:54.579
因此 我们只需要做一件事情 就是把已经有的

00:01:54.578 --> 00:01:59.568
 sigma点转换为测量空间

00:01:59.569 --> 00:02:02.579
并使用这些店来计算预测测量值的

00:02:02.578 --> 00:02:06.309
均值和协方差矩阵 S

00:02:06.310 --> 00:02:09.960
同样地 转换后的测量 sigma点

00:02:09.960 --> 00:02:12.159
存储为矩阵中的栏

00:02:12.158 --> 00:02:15.060
我把它记作花体的 Z

00:02:15.060 --> 00:02:17.590
想想雷达的测量空间

00:02:17.590 --> 00:02:20.650
这是径向距离 ρ 角 φ

00:02:20.650 --> 00:02:26.050
以及径向速度 ρ 点 因此 这是个三维空间

00:02:26.050 --> 00:02:29.580
这表示 本例中 包括 sigma点的矩阵有 3 行

00:02:29.580 --> 00:02:32.170
15 列

00:02:32.169 --> 00:02:34.250
至于测量噪音 ω

00:02:34.250 --> 00:02:38.568
在这里输入 0 就可以 因为我们后面会处理测量噪音

00:02:38.568 --> 00:02:42.048
现在 我们有了 sigma点和测量空间

00:02:42.050 --> 00:02:46.550
需要计算得到的预测测量值的均值和协方差

00:02:46.550 --> 00:02:50.030
这和之前学过的也很相似 根据这些方程计算即可

00:02:51.080 --> 00:02:53.670
这里唯一多出来的是

00:02:53.669 --> 00:02:56.149
我们添加了测量协方差噪音

00:02:56.150 --> 00:02:59.020
这是测量噪音的处理方式

00:02:59.020 --> 00:03:02.439
记住 这里可以使用这个替代扩充

00:03:02.438 --> 00:03:05.489
因为本例中的测量噪音

00:03:05.490 --> 00:03:08.530
对测量不具备非线性效应 它是单纯的累积性的

00:03:09.800 --> 00:03:13.150
这就是预测测量均值和协方差的方式

00:03:13.150 --> 00:03:15.968
和之前的问题实际上一样

00:03:15.968 --> 00:03:20.400
但借助我刚刚介绍的两个快捷方法 这个步骤非常简单

00:03:20.400 --> 00:03:24.129
这个步骤完成后 你就几乎已经完成了整个 UKF 处理链


WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.384
So we're going to look at doing implementing RANSAC for lines.

00:00:05.384 --> 00:00:09.599
There is a quiz exercise that you'll be doing.

00:00:09.599 --> 00:00:16.609
It'll get you prepped for extending RANSAC to doing plain fitting, and then actually,

00:00:16.609 --> 00:00:21.649
you'll be able to write exactly what we were just doing for that PCL segmentation,

00:00:21.649 --> 00:00:24.269
but you can write it from scratch in C ++,

00:00:24.269 --> 00:00:26.809
and fully understand the algorithm,

00:00:26.809 --> 00:00:29.119
and even make extensions onto it.

00:00:29.120 --> 00:00:31.970
There are some different options that you can do in

00:00:31.969 --> 00:00:35.244
different flavors of RANSAC that you can explore.

00:00:35.244 --> 00:00:37.905
So in this quiz,

00:00:37.905 --> 00:00:40.645
for doing the random sampling,

00:00:40.645 --> 00:00:44.450
let's just do the minimum number of points needed to fit a line.

00:00:44.450 --> 00:00:48.125
What's the minimum number of points needed to fit a line? Just two.

00:00:48.125 --> 00:00:51.914
So we'll just take two points from the data,

00:00:51.914 --> 00:00:54.854
randomly sampled for each iteration,

00:00:54.854 --> 00:00:57.739
and then we'll fit a line between those two points.

00:00:57.740 --> 00:01:01.535
Then for all the other points in the data,

00:01:01.534 --> 00:01:05.969
we calculate the distance from that point to the fitted line,

00:01:05.969 --> 00:01:08.408
and if the distance is within the tolerance,

00:01:08.409 --> 00:01:10.415
the distance tolerance that we're defining,

00:01:10.415 --> 00:01:12.575
then that point is an inlier.

00:01:12.575 --> 00:01:14.990
So we're doing this for each iteration,

00:01:14.989 --> 00:01:17.839
we count how many inliers that iteration has.

00:01:17.840 --> 00:01:21.935
The iteration that has the most in inliers is the best line.

00:01:21.935 --> 00:01:30.329
That's what we'll be using as the inliers that we later give to the separate PointClouds.


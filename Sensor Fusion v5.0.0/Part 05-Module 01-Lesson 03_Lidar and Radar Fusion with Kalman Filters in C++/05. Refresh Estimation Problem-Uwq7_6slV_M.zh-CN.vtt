WEBVTT
Kind: captions
Language: zh-CN

00:00:00.200 --> 00:00:01.790
我们再回到问题

00:00:01.790 --> 00:00:06.870
我们想要追踪在无人车前移动的行人

00:00:06.870 --> 00:00:11.390
卡尔曼滤波器本质上是一个两步估算问题

00:00:11.390 --> 00:00:13.860
包括预测和更新

00:00:13.859 --> 00:00:18.609
我们开始时 依赖已知的行人信息

00:00:18.609 --> 00:00:23.439
推断出行人在下次测量到达时

00:00:23.440 --> 00:00:27.345
的行人状态 这叫做预测步骤

00:00:27.344 --> 00:00:32.579
下一步叫更新步骤 其本质是

00:00:32.579 --> 00:00:37.939
使用新的观察数据纠正我们对于行人状态的信度

00:00:37.939 --> 00:00:43.599
卡尔曼滤波器一般是由无穷的预测更新步骤组成的

00:00:43.600 --> 00:00:47.079
你和 Sebastian 之前在本课程创建的滤波器也是这样

00:00:47.079 --> 00:00:50.729
那么 如果有两个传感器观察同一名

00:00:50.729 --> 00:00:51.729
行人呢

00:00:51.729 --> 00:00:54.129
卡尔曼滤波器会发生什么变化？

00:00:54.130 --> 00:00:58.650
实际上 我们可以使用同样的处理流程 区别在于

00:00:58.649 --> 00:01:04.090
每个传感器都有独立的预测/更新周期

00:01:04.090 --> 00:01:07.659
换句话说 关于行人位置和速度的信度

00:01:07.659 --> 00:01:10.859
是非同步更新的

00:01:10.859 --> 00:01:15.480
每次收到新测量值后更新 不考虑来自哪个传感器

00:01:15.480 --> 00:01:19.120
我们看一个例子 了解具体情况

00:01:19.120 --> 00:01:23.978
这里显示了在时间 k 的行人状态分布

00:01:23.977 --> 00:01:27.224
均值为 X 协方差为 P

00:01:27.224 --> 00:01:29.823
假设现在时间到了 K+1

00:01:29.823 --> 00:01:33.399
我们刚刚收到一个激光测量值

00:01:33.400 --> 00:01:37.330
在查看测量更新前 我们首先要做的是

00:01:37.329 --> 00:01:40.079
预测我们认为

00:01:40.079 --> 00:01:44.239
来自时间 K 的行人在 时间 K+1 在哪里

00:01:44.239 --> 00:01:48.879
第二件事叫做测量值更新

00:01:48.879 --> 00:01:53.079
需要综合行人的预测状态和新的激光测量值

00:01:53.079 --> 00:01:57.319
现在 我们对行人在时间 K+1 的位置有了

00:01:57.319 --> 00:02:00.909
更准确的信仰

00:02:00.909 --> 00:02:06.619
假设我们在时间 K+2 收到了雷达测量值

00:02:06.620 --> 00:02:11.870
首先 我们再次预测行人从 K+1 到 K+2 的状态

00:02:11.870 --> 00:02:13.789
注意 这次雷达预测

00:02:13.789 --> 00:02:18.459
使用的函数和激光预测一样

00:02:18.460 --> 00:02:22.770
在本例中 不同的地方在于测量更新步骤

00:02:22.770 --> 00:02:26.469
我们知道 雷达和激光观察世界的方式不同

00:02:26.469 --> 00:02:30.542
激光提供的测量数据是基于笛卡尔坐标系的

00:02:30.542 --> 00:02:34.001
而雷达提供的测量数据是基于极坐标系的

00:02:34.001 --> 00:02:38.879
因此 我们必须使用专门针对雷达的

00:02:38.878 --> 00:02:43.969
不同测量更新函数 因此 这就是通用滤波器的详细结构

00:02:43.969 --> 00:02:48.580
我们在每个时间戳上收到了来自不同传感器的测量值i

00:02:48.580 --> 00:02:53.010
然后进行预测 再进行测量值更新

00:02:53.009 --> 00:02:54.799
现在都跟得上吗？

00:02:54.800 --> 00:02:59.350
在接下来的小测试中 我希望你能按照这个流程

00:02:59.349 --> 00:03:03.609
但这次我们要考虑的是 在时间 K+3

00:03:03.610 --> 00:03:08.114
不同传感器的数据同时到达 如何预测和更新


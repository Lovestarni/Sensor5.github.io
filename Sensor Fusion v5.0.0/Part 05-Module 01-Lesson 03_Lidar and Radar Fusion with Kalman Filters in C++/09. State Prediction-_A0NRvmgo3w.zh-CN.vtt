WEBVTT
Kind: captions
Language: zh-CN

00:00:00.140 --> 00:00:04.669
恭喜！你刚刚编写了一维追踪问题的

00:00:04.669 --> 00:00:06.570
C++ 卡尔曼滤波器

00:00:06.570 --> 00:00:09.169
但现在 我们假设车辆

00:00:09.169 --> 00:00:12.480
传感器能提供二维测量数据

00:00:12.480 --> 00:00:14.490
这是课程地图 我们学到了这里

00:00:14.490 --> 00:00:17.440
现在 我们需要重新思考预测

00:00:17.440 --> 00:00:18.050
步骤

00:00:18.050 --> 00:00:22.160
首先 我们必须定义状态转移矩阵 F

00:00:22.160 --> 00:00:25.359
和过程协方差矩阵 Q

00:00:25.359 --> 00:00:27.369
因此 我们会有如下变化

00:00:27.370 --> 00:00:33.390
首先 因为行人沿着横向和纵向移动

00:00:33.390 --> 00:00:38.450
我们希望估算二维位置和二维速度

00:00:38.450 --> 00:00:41.478
这样我们就得到了一个四维状态向量

00:00:41.478 --> 00:00:45.429
x 等于 Px、Py、Vx、Vy

00:00:45.429 --> 00:00:49.899
其次 我们使用带有常量速度的同一个线性运动模型

00:00:49.899 --> 00:00:54.739
这样 新的 x 和y 位置就是旧位置加上

00:00:54.740 --> 00:00:59.520
位移 和速度乘以 Δt 一样

00:00:59.520 --> 00:01:03.000
沿着 x 和 y 方向的速度保持不变

00:01:04.260 --> 00:01:08.160
因此 我们得到了下列状态转移方程

00:01:08.159 --> 00:01:13.200
用矩阵表示

00:01:13.200 --> 00:01:17.799
第三个主要变化是 Δt 不再是常量

00:01:17.799 --> 00:01:20.224
在现实中 两次连续观察之间的

00:01:20.224 --> 00:01:23.155
时间差可能不同

00:01:23.155 --> 00:01:25.795
让我来考考你的直觉

00:01:25.795 --> 00:01:29.225
因为之前在 Sebastian 的课上我们没有用到它

00:01:29.224 --> 00:01:32.384
你需要做两个小测试 检查你这方面的知识


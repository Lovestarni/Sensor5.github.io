WEBVTT
Kind: captions
Language: zh-CN

00:00:00.320 --> 00:00:02.730
这是课程地图 我们学到了这里

00:00:02.730 --> 00:00:07.769
接下来 我们必须线性化我们的 h(x) 函数

00:00:07.769 --> 00:00:10.480
记住 我们首先从导数开始

00:00:10.480 --> 00:00:11.740
下面 我们正式开始

00:00:11.740 --> 00:00:15.789
如果我们把前一个例子归纳到一个更高的维度

00:00:15.789 --> 00:00:21.939
那么函数 h(x) 对应于 x 的导数 被称作雅可比式

00:00:21.940 --> 00:00:26.670
它是一个矩阵 包含所有偏导数

00:00:26.670 --> 00:00:29.970
例如 对于这个 h 函数

00:00:29.969 --> 00:00:35.350
在这里的第一行 我推导出了对应于

00:00:35.350 --> 00:00:40.219
x 的第一个维度

00:00:40.219 --> 00:00:44.289
x 的第二个维度 直到 x 的第 n 个维度 对应的 函数 h1 的第一个维度

00:00:44.289 --> 00:00:49.091
对小写 h 函数的每个维度重复这个步骤

00:00:49.091 --> 00:00:54.777
具体来说 我知道测量函数描述了

00:00:54.777 --> 00:00:59.679
三个分量：距离、方向角和距离变化率

00:00:59.679 --> 00:01:05.250
我的状态是一个向量 包括四个分量 Px、Py、Vx、Vy

00:01:05.250 --> 00:01:11.250
因此 雅可比矩阵 Hj 是一个三行四列的

00:01:11.250 --> 00:01:12.459
矩阵

00:01:12.459 --> 00:01:17.329
计算过所有这些偏导数后 我得到了这个矩阵

00:01:17.329 --> 00:01:21.750
如果你想详细了解如何得到这个结果的

00:01:21.750 --> 00:01:23.659
可以看看视频下方的详细信息

00:01:23.659 --> 00:01:25.429
好的 我们开始编程

00:01:25.430 --> 00:01:29.490
现在 我希望你实现 CalculateJacobian 函数

00:01:29.489 --> 00:01:32.179
这个函数将当前预测状态作为参数

00:01:32.180 --> 00:01:36.300
并计算出新的雅可比矩阵 Hj 就是你刚刚看到的矩阵

00:01:36.299 --> 00:01:42.019
举个例子 如果我们的预测状态是 x 等于 1、2、0.2 和 0.4

00:01:42.019 --> 00:01:49.409
我希望输出一个 3x4 的矩阵 具体值如下

00:01:49.409 --> 00:01:53.429
在 CalculateJacobian 函数中这部分填入你的代码

00:01:53.430 --> 00:01:58.440
此你还必须保证计算雅可比矩阵时除数不为 0

00:01:58.439 --> 00:02:02.349
也就是说 你必须确保 x 和 y 都不是 0

00:02:02.349 --> 00:02:06.259
如果发生这种情况 只需要打印出错误信息


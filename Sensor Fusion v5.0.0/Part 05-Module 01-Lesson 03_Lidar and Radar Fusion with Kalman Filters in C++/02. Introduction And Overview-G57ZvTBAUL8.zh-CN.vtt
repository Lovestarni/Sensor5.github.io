WEBVTT
Kind: captions
Language: zh-CN

00:00:00.490 --> 00:00:03.677
希望你已经准备好进行 C++ 技巧测试了

00:00:03.677 --> 00:00:07.320
我们再次请到了梅赛德斯-奔驰的 Andrei Vatavu

00:00:07.320 --> 00:00:09.150
嗨 Andrei 感谢你来帮忙

00:00:09.150 --> 00:00:10.349
- David 你好

00:00:10.349 --> 00:00:14.369
- 现在 学员应该非常了解卡尔曼滤波器

00:00:14.369 --> 00:00:16.089
的相关概念了

00:00:16.089 --> 00:00:18.379
这堂课他们要做什么呢？

00:00:18.379 --> 00:00:19.679
- 问得好

00:00:19.679 --> 00:00:20.309
在这堂课

00:00:20.309 --> 00:00:24.839
你要学习如何使用卡尔曼滤波器开发一个融合系统

00:00:24.839 --> 00:00:25.809
就像 David 说的

00:00:25.809 --> 00:00:30.079
上过 Sebastian 的课之后 你应该已经非常熟悉

00:00:30.079 --> 00:00:34.170
如何应用卡尔曼滤波器解决估算问题了

00:00:34.170 --> 00:00:38.469
你只用它融合过来自单一传感器的串行测量数据

00:00:38.469 --> 00:00:42.250
但实际上 它还能用来融合来自不同传感器的

00:00:42.250 --> 00:00:43.909
测量数据

00:00:43.909 --> 00:00:46.819
因此 我们在传感器融合中也要用到它

00:00:46.820 --> 00:00:48.380
- 听起来很简单

00:00:48.380 --> 00:00:52.200
我们解决本课程实战项目的计划 是利用传感器融合数据

00:00:52.200 --> 00:00:53.609
来追踪一名行人 对吗？

00:00:53.609 --> 00:00:56.320
- 最后提示 你需要使用 C++ 实现这些功能

00:00:56.320 --> 00:00:59.905
雷达各有优劣

00:00:59.905 --> 00:01:02.465
把两者的优势结合起来

00:01:02.465 --> 00:01:07.465
你就能准确地估算行人位置、方向和速度

00:01:07.465 --> 00:01:11.948
最后提示 你需要在 C++ 中实现这些功能


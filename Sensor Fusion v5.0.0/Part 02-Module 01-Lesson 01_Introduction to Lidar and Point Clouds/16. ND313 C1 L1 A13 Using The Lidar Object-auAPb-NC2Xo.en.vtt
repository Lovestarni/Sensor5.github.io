WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.610
Next, let's look at how we can actually use this Lidar object to scan

00:00:05.610 --> 00:00:11.385
the environment around us and tell us something about what the environment looks like.

00:00:11.384 --> 00:00:14.160
So for this next exercise,

00:00:14.160 --> 00:00:17.309
we're doing Lidar sensing and we're going to be looking

00:00:17.309 --> 00:00:20.924
at calling the "Scan" function from lidar.h.

00:00:20.925 --> 00:00:24.570
Then we're going to look at the results of the scan

00:00:24.570 --> 00:00:28.649
and we'll be seeing the rays that this creates,

00:00:28.649 --> 00:00:33.420
the Lidar lasers that are actually spanning from the Lidar sensor.

00:00:33.420 --> 00:00:36.524
So in order to do this,

00:00:36.524 --> 00:00:45.369
looking at lidar.h, there is a "Scan" function near the bottom.

00:00:46.880 --> 00:00:50.679
So "Scan" actually doesn't take in any arguments.

00:00:50.679 --> 00:00:53.350
The Lidar has everything it needs to know.

00:00:53.350 --> 00:00:56.590
It has the cars and it has the ground slope.

00:00:56.590 --> 00:01:02.710
It's going to generate this PCL PointCloud for us.

00:01:02.710 --> 00:01:05.859
So when you're calling the "Scan" just make sure that you're

00:01:05.859 --> 00:01:09.799
using the same type for the variable that its generating.

00:01:09.799 --> 00:01:13.810
Then you can actually visualize what this looks like.

00:01:13.810 --> 00:01:20.090
So this PointCloud that's generating and that's by using a function in render.cpp.

00:01:20.090 --> 00:01:25.299
So it has a function called "renderRays."

00:01:25.370 --> 00:01:29.730
Right here at line 24 in render.cpp.

00:01:29.730 --> 00:01:34.204
You can call "renderRays" and check out the arguments for it.

00:01:34.204 --> 00:01:36.105
So we have this viewer,

00:01:36.105 --> 00:01:37.844
we're passing it as a reference.

00:01:37.844 --> 00:01:43.390
We'll give "renderRays" the viewer that we're working with environment.cpp.

00:01:43.390 --> 00:01:47.405
We'll also tell it about the origin of this Lidar.

00:01:47.405 --> 00:01:51.939
So that's because all the rays are being cast from this origin.

00:01:51.939 --> 00:01:55.390
So in order to do this visualization for the rays,

00:01:55.390 --> 00:01:56.844
we need to know this position.

00:01:56.844 --> 00:02:03.025
The last argument is just going to be that PointCloud that we generated from the scan.

00:02:03.025 --> 00:02:05.080
So if you pass that in,

00:02:05.079 --> 00:02:08.544
you can then visualize what that looks like.

00:02:08.544 --> 00:02:12.104
So back in environment.cpp now,

00:02:12.104 --> 00:02:16.649
look at the documentation in lidar.h for how to use the "Scan",

00:02:16.650 --> 00:02:22.319
generate the PointCloud and then feed in that "renderRays" function,

00:02:22.319 --> 00:02:24.084
feed in the PointCloud there.

00:02:24.085 --> 00:02:31.330
Go ahead and compile and run and the results should look something like this.


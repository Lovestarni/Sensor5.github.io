WEBVTT
Kind: captions
Language: ja-JP

00:00:00.360 --> 00:00:02.929
センサーフュージョンモジュールへようこそ

00:00:02.930 --> 00:00:06.189
センサーフュージョンでは
車両または車両関連の感知ロボットを使って

00:00:06.190 --> 00:00:09.620
環境を認識し
追跡します

00:00:09.619 --> 00:00:13.399
&gt;&gt; 環境は
他の車両、道路の路肩のガードレール

00:00:13.400 --> 00:00:17.190
オートバイ道路を横断する歩行者などで
構成されます

00:00:17.190 --> 00:00:18.550
&gt;&gt; 歩行者をひかないで

00:00:18.550 --> 00:00:20.280
&gt;&gt; そう
歩行者をひかないで

00:00:20.280 --> 00:00:21.740
&gt;&gt; 絶対にね

00:00:21.739 --> 00:00:24.449
まずは
メンバーを紹介します

00:00:24.449 --> 00:00:28.859
こちらはメルセデスベンツのセンサーフュージョンチームの
ディレクター マイケル・メイルです

00:00:28.859 --> 00:00:29.800
&gt;&gt; こんにちは

00:00:29.800 --> 00:00:31.539
&gt;&gt; 同じくメルセデスベンツのエンジニアで

00:00:31.539 --> 00:00:35.269
マイケルのチームに所属する
アンドレイ・ヴァタヴ

00:00:35.270 --> 00:00:35.691
&gt;&gt; こんにちは

00:00:35.691 --> 00:00:36.945
&gt;&gt; そしてドミニク・ナス

00:00:36.945 --> 00:00:38.060
&gt;&gt; ようこそ

00:00:38.060 --> 00:00:40.880
&gt;&gt; このモジュールでは
車両に対して相対的に歩行者を追跡する

00:00:40.880 --> 00:00:45.359
独自のセンサー フュージョンアルゴリズムを
実装します

00:00:45.359 --> 00:00:48.700
これには ライダーとレーダーのデータを
融合する必要があります

00:00:48.700 --> 00:00:51.790
カルマンフィルターと呼ばれる手法を
使用します

00:00:51.789 --> 00:00:55.729
最初は基本的なカルマンフィルターを
使いますが

00:00:55.729 --> 00:01:00.009
アンドレイとドミニクが
より複雑なデータに拡張するお手伝いをします

00:01:00.009 --> 00:01:03.000
&gt;&gt; これは
最初のレッスンです

00:01:03.000 --> 00:01:06.149
この後マイケルが ライダーセンサーと
レーダーセンサーの基本を説明します

00:01:07.200 --> 00:01:09.590
&gt;&gt; 2番目のレッスンでは
セバスチャンが登場します

00:01:09.590 --> 00:01:13.120
カルマンフィルターの概念といえば
セバスチャンです

00:01:13.120 --> 00:01:16.141
セバスチャンの
ロボット工学AIを使って

00:01:16.141 --> 00:01:19.609
Pythonで簡易なカルマンフィルターを
作成します

00:01:19.609 --> 00:01:23.099
すでにセバスチャンのコースを受講している場合は
スキップして構いません

00:01:23.099 --> 00:01:24.885
&gt;&gt; その後大きな変化があります

00:01:24.885 --> 00:01:26.856
&gt;&gt; C++のこと?

00:01:26.856 --> 00:01:28.331
&gt;&gt; そうです

00:01:28.331 --> 00:01:30.466
&gt;&gt; センサーフュージョンは
迅速に行う必要があります

00:01:30.466 --> 00:01:33.454
つまり 高性能言語を
使わなければなりません

00:01:33.454 --> 00:01:39.349
C++はリアルタイム操作を実行する上で
重要な言語です

00:01:39.349 --> 00:01:44.539
メルセデスではC++を採用しており
このモジュールではプロジェクトの構築にC++を使います

00:01:44.540 --> 00:01:47.780
&gt;&gt; 3番目のレッスンでは
C++チェックポイントを呼び出します

00:01:47.780 --> 00:01:52.230
C++の手法の適用能力をテストする
課題も出されます

00:01:52.230 --> 00:01:56.950
課題を終えたら
いよいよC++で基本的なカルマンフィルターを作成します

00:01:56.950 --> 00:01:59.909
&gt;&gt; まだC++について
知らなくても大丈夫

00:01:59.909 --> 00:02:00.939
そのような方向けに

00:02:00.939 --> 00:02:04.480
迅速な習得を助けるリソースを
用意してあります

00:02:04.480 --> 00:02:08.009
これらのリソースを使って
C++の中核となる概念に慣れることで

00:02:08.008 --> 00:02:11.529
 課題を
クリアできます

00:02:11.530 --> 00:02:14.500
幸い
このモジュールで使用するC++は

00:02:14.500 --> 00:02:16.560
Pythonにかなり似ています

00:02:16.560 --> 00:02:21.020
制御フロー、関数、クラス、参照の
基本さえ知っていれば

00:02:21.020 --> 00:02:22.340
心配はありません

00:02:22.340 --> 00:02:24.590
&gt;&gt; その後
次の2つのレッスンでは

00:02:24.590 --> 00:02:26.990
アンドレイとドミニクが協力してくれます

00:02:26.990 --> 00:02:30.180
&gt;&gt; ライダーとレーダーは
大幅に異なるデータを生成します

00:02:30.180 --> 00:02:35.129
2つのセンサーのデータを融合する
カルマンフィルターを

00:02:35.129 --> 00:02:36.650
C++で実装するお手伝いをします

00:02:36.650 --> 00:02:41.140
&gt;&gt; 私のレッスンでは アンセンテッドカルマンフィルターを使って
センサーのデータを融合します

00:02:41.139 --> 00:02:44.589
これはオブジェクト追跡の
もう1つの手法であり

00:02:44.590 --> 00:02:48.740
方向を変える車や自転車などの非線形の動きを処理できる
ツールを提供します

00:02:48.740 --> 00:02:51.090
&gt;&gt; 楽しくなりそうです

00:02:51.090 --> 00:02:52.120
それでは始めましょう

00:02:52.120 --> 00:02:55.270
マイケル 自動運転車を披露する
準備はできていますか?

00:02:55.270 --> 00:02:55.760
&gt;&gt; もちろん


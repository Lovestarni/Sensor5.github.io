WEBVTT
Kind: captions
Language: zh-CN

00:00:00.360 --> 00:00:02.929
欢迎来到传感器融合模块

00:00:02.930 --> 00:00:06.189
传感器融合可帮助汽车或任何具备感知功能的机器人

00:00:06.190 --> 00:00:09.620
了解并追踪其所处的环境

00:00:09.619 --> 00:00:13.399
- 环境中可能有车辆、路肩上的障碍物

00:00:13.400 --> 00:00:17.190
摩托车 或穿越道路的行人

00:00:17.190 --> 00:00:18.550
- 不要撞到行人

00:00:18.550 --> 00:00:20.280
- 没错 不要撞到行人

00:00:20.280 --> 00:00:21.740
- 这是我们的目标。

00:00:21.739 --> 00:00:24.449
首先 我来介绍一下我们的教师队伍

00:00:24.449 --> 00:00:28.859
这是 Michael Maile 梅赛德斯-奔驰的传感器融合团队主管

00:00:28.859 --> 00:00:29.800
- 大家好

00:00:29.800 --> 00:00:31.539
- 此我们还有两名工程师

00:00:31.539 --> 00:00:35.269
也来自 Michael Maile 的团队 他们是 Andrei Vatavu

00:00:35.270 --> 00:00:35.691
- 嗨

00:00:35.691 --> 00:00:36.945
- 还有 Dominik Nuss

00:00:36.945 --> 00:00:38.060
- 大家好

00:00:38.060 --> 00:00:40.880
- 本模块结束时 你需要实现自己的

00:00:40.880 --> 00:00:45.359
传感器融合算法 用于追踪车辆旁边的行人

00:00:45.359 --> 00:00:48.700
要做到这一点 你需要将激光雷达和雷达数据相融合

00:00:48.700 --> 00:00:51.790
你需要用到一种工具：卡尔曼滤波器

00:00:51.789 --> 00:00:55.729
你首先需要学习基础的卡尔曼滤波器 接下来

00:00:55.729 --> 00:01:00.009
Andre 和 Dominic 会帮助扩展它以应对更为复杂的数据

00:01:00.009 --> 00:01:03.000
- 现在就是我们的第一堂课 一会儿

00:01:03.000 --> 00:01:06.149
Michael 会向大家介绍激光雷达和雷达的基础知识

00:01:07.200 --> 00:01:09.590
- 在第二堂课上 你会跟 Sebastian 学习

00:01:09.590 --> 00:01:13.120
他是卡尔曼滤波器概念方面的专家

00:01:13.120 --> 00:01:16.141
他会带你学习一些机器人学课程中的人工智能知识

00:01:16.141 --> 00:01:19.609
你需要使用 Python 构建一个简化的卡尔曼滤波器

00:01:19.609 --> 00:01:23.099
如果你已经学过了 Sebastian 的课程 可以跳过这堂课

00:01:23.099 --> 00:01:24.885
- 接下来 就是挑战时刻了

00:01:24.885 --> 00:01:26.856
- 你是说 C++？

00:01:26.856 --> 00:01:28.331
- 没错

00:01:28.331 --> 00:01:30.466
- 传感器融合必须迅速

00:01:30.466 --> 00:01:33.454
因此 我们需要高性能语言

00:01:33.454 --> 00:01:39.349
对于实时计算来讲，C++是一门很关键的语言

00:01:39.349 --> 00:01:44.539
在梅赛德斯我们大量使用这门语言 在本课程中 你也要使用它来完成自己的项目

00:01:44.540 --> 00:01:47.780
- 因此 第三课我们叫做 C++ 知识点检查

00:01:47.780 --> 00:01:52.230
你要解决一些难题 测试你应用 C++ 的能力

00:01:52.230 --> 00:01:56.950
完成这些题目后 你就可以开始使用 C++ 创建基础的卡尔曼滤波器了

00:01:56.950 --> 00:01:59.909
- 但是 如果你真的不了解 C++ 呢？

00:01:59.909 --> 00:02:00.939
如果是这样的话，

00:02:00.939 --> 00:02:04.480
我们提供了一些资源 可以帮助你跟上进度

00:02:04.480 --> 00:02:08.009
你可以使用这些资源熟悉核心的 C++ 概念

00:02:08.008 --> 00:02:11.529
从而解决这些难题

00:02:11.530 --> 00:02:14.500
好消息是 你在本模块中使用的 C++

00:02:14.500 --> 00:02:16.560
和 Python 非常相似

00:02:16.560 --> 00:02:21.020
你应该能迅速掌握控制流、函数、类

00:02:21.020 --> 00:02:22.340
和引用等基础知识

00:02:22.340 --> 00:02:24.590
- 此后 你会跟着 Andre 和

00:02:24.590 --> 00:02:26.990
Dominic 学习后面的两堂课

00:02:26.990 --> 00:02:30.180
- 激光雷达和雷达产生的数据差别很大

00:02:30.180 --> 00:02:35.129
我会帮助你使用 C++ 实现一个卡尔曼滤波器

00:02:35.129 --> 00:02:36.650
融合这两种传感器的数据

00:02:36.650 --> 00:02:41.140
- 在我的课上 你需要使用无损卡尔曼滤波器进行传感器融合

00:02:41.139 --> 00:02:44.589
这和对象追踪的技术不同 它提供了新的工具

00:02:44.590 --> 00:02:48.740
用于处理非线性运动 如汽车或自行车的拐弯

00:02:48.740 --> 00:02:51.090
- 好的 听起来很有趣

00:02:51.090 --> 00:02:52.120
我们开始吧

00:02:52.120 --> 00:02:55.270
Michael 你准备好炫耀你的无人车了吗？

00:02:55.270 --> 00:02:55.760
- 当然


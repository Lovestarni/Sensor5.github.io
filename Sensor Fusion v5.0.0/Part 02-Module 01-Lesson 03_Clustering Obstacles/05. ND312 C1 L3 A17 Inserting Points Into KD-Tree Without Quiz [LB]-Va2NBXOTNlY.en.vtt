WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.070
So let's go ahead and start looking at how to insert points into our KD-tree.

00:00:05.070 --> 00:00:08.190
Let's do this by inserting just one point So we have

00:00:08.189 --> 00:00:12.629
an empty tree and we're going to go ahead and insert a single-point into our tree.

00:00:12.630 --> 00:00:18.045
Well, this first point is going to become the root of our binary tree.

00:00:18.045 --> 00:00:25.410
Then consecutive points will flow either to the left or the right of this root,

00:00:25.410 --> 00:00:30.660
they'll become either the left child or the right child and they will do this

00:00:30.660 --> 00:00:33.289
based on a comparison and that comparison

00:00:33.289 --> 00:00:36.170
for that first is going to be based on the X-value.

00:00:36.170 --> 00:00:39.230
So we're going to look at the X value for the root.

00:00:39.229 --> 00:00:43.069
We're going to have a new point and we're going to have that new point's X-value,

00:00:43.070 --> 00:00:46.280
and if that new points X value is less than the roots X value,

00:00:46.280 --> 00:00:48.050
it's going to flow to the left.

00:00:48.049 --> 00:00:52.429
If we have that new point and its X value is greater than the roots X value,

00:00:52.429 --> 00:00:53.869
it's going to flow to the right.

00:00:53.869 --> 00:00:56.584
So let's go ahead and insert a point,

00:00:56.585 --> 00:00:59.299
let's insert negative 6.27,

00:00:59.299 --> 00:01:01.759
that's the first point that we're inserting into a tree.

00:01:01.759 --> 00:01:03.814
This is what it visually looks like.

00:01:03.814 --> 00:01:09.109
We have our point and it's inserted in space and now any points that come into it later

00:01:09.109 --> 00:01:15.004
on will either branch off to the left section or off to the right section.

00:01:15.004 --> 00:01:17.899
They'll do that based on the X-value.

00:01:17.900 --> 00:01:20.570
So let's go ahead and insert a second.

00:01:20.569 --> 00:01:24.154
Now, we're going to insert the point - negative 6.3, 8.4.

00:01:24.155 --> 00:01:29.030
Well, negative 6.3 is less than negative 6.2,

00:01:29.030 --> 00:01:30.379
the roots of that X value.

00:01:30.379 --> 00:01:33.295
So it's going to branch off to the left.

00:01:33.295 --> 00:01:37.109
Let's go ahead and see what that looks like.

00:01:37.109 --> 00:01:38.730
Now, so this point,

00:01:38.730 --> 00:01:42.260
it's a negative 6.3 is just a little bit less than negative 6.2.

00:01:42.260 --> 00:01:45.290
So it's just a little bit off to the left here.. Now,

00:01:45.290 --> 00:01:49.385
this point is going to spatially split on the Y dimension.

00:01:49.385 --> 00:01:55.219
So when we have a point that travels and visits this second point now,

00:01:55.219 --> 00:01:59.390
it's going to figure out where to branch off next based on looking at the Y comparison

00:01:59.390 --> 00:02:04.495
and seeing if it's Y value is greater than or less than this point's Y-value.

00:02:04.495 --> 00:02:08.870
We have this red line showing that that is splitting the Y dimension now.

00:02:08.870 --> 00:02:11.314
Let's insert two more points into our tree.

00:02:11.314 --> 00:02:13.789
Let's go ahead and insert negative 5.2,

00:02:13.789 --> 00:02:16.129
7.1 and negative 5.7,

00:02:16.129 --> 00:02:18.414
6.3 into our tree.

00:02:18.414 --> 00:02:21.495
Now, the tree has a depth of two,

00:02:21.495 --> 00:02:23.950
and we'll visually see that here in a second.

00:02:23.949 --> 00:02:29.959
What that means is we're alternating between doing X splits and Y splits.

00:02:29.960 --> 00:02:32.379
It really depends on the depth of our tree.

00:02:32.379 --> 00:02:34.469
So if the depth is even,

00:02:34.469 --> 00:02:35.580
we do an X split.

00:02:35.580 --> 00:02:37.800
If it's odd, we do a Y split.

00:02:37.800 --> 00:02:40.875
So this negative 5.7, 6.3 since is.

00:02:40.875 --> 00:02:45.324
=P]=[a depth of two is going to now again split the X region.

00:02:45.324 --> 00:02:50.359
So that X and Y split alternates between the depth of the tree.

00:02:50.360 --> 00:02:52.300
This is what that looks like.

00:02:52.300 --> 00:02:56.600
Now, we have four points in our tree and we had this new point come

00:02:56.599 --> 00:03:01.340
in and its X value is greater so it went off to this X region and then it split the Y.

00:03:01.340 --> 00:03:04.819
Then, we have this new point come in and it's looking at

00:03:04.819 --> 00:03:08.719
this node as for comparison and it's Y-value is less.

00:03:08.719 --> 00:03:11.629
So it comes into the left and it's at a depth of two.

00:03:11.629 --> 00:03:14.340
So it's going to split the X region again.

00:03:14.340 --> 00:03:17.750
We had two blue lines here.

00:03:17.750 --> 00:03:21.155
Let's visually look at what this binary tree looks like.

00:03:21.155 --> 00:03:24.560
So here's what this tree looks like after inserting

00:03:24.560 --> 00:03:27.890
these four points in the order that we were just talking about.

00:03:27.889 --> 00:03:29.329
So here's our root.

00:03:29.330 --> 00:03:31.730
Here's the left child of root,

00:03:31.729 --> 00:03:32.914
here's a right child of the root,

00:03:32.914 --> 00:03:38.969
and then that last point became the left child of this node here.


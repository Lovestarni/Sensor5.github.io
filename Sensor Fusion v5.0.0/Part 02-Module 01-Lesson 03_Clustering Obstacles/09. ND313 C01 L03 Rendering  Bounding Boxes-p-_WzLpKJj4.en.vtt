WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.580
Okay. So looking at environment.cpp,

00:00:02.580 --> 00:00:06.300
here is an example of how we can render bounding boxes.

00:00:06.299 --> 00:00:08.460
We can just go ahead and create a box,

00:00:08.460 --> 00:00:12.345
using point processor function bounding box and give it a cluster,

00:00:12.345 --> 00:00:17.550
and then just go ahead and call the render box inside render.cpp.

00:00:17.550 --> 00:00:19.335
Tell it the viewer,

00:00:19.335 --> 00:00:23.550
and the box, and then here is this an int value.

00:00:23.550 --> 00:00:27.510
In this case, it's this making it so we have unique bounding boxes.

00:00:27.510 --> 00:00:29.100
So it's his passing an int,

00:00:29.100 --> 00:00:33.015
and if you look at the function render box and render.cpp,

00:00:33.015 --> 00:00:37.710
you can see this is taking that int and it's concatenating it onto a string box.

00:00:37.710 --> 00:00:41.660
That way, the viewer has unique identifier for each of these boxes,

00:00:41.659 --> 00:00:44.069
and they'll be able to render those.

00:00:44.810 --> 00:00:50.120
That is just happening all within this one loop where we're going through each of

00:00:50.119 --> 00:00:55.204
the different clusters that we got from calling the clustering function,

00:00:55.204 --> 00:00:59.570
and so while you're rendering those clusters using render point Cloud,

00:00:59.570 --> 00:01:04.290
you can go ahead and also render a box around those clusters as well,

00:01:04.290 --> 00:01:07.445
and then we're just incrementing through the different cluster IDs.

00:01:07.444 --> 00:01:11.284
So that's how we can go ahead in our code,

00:01:11.284 --> 00:01:17.099
add this render bounding box inside an environment.cpp..


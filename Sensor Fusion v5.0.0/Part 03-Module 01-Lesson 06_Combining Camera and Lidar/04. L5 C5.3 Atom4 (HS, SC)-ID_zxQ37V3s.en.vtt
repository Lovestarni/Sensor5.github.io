WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.819
Now, the aim of this video is to give you an understanding of how

00:00:02.819 --> 00:00:04.650
the visualization works and how we can extract

00:00:04.650 --> 00:00:07.530
the different object properties. Let's take a look.

00:00:07.530 --> 00:00:12.030
So let's take a look at how 3D object visualization actually works.

00:00:12.029 --> 00:00:14.579
So as an input we take a vector of bounding boxes,

00:00:14.580 --> 00:00:19.274
and let's get clear maybe some aspects about the terminology we use.

00:00:19.274 --> 00:00:24.779
So the yellow object detection framework actually produces a set

00:00:24.780 --> 00:00:31.304
of regions of interest around certain objects in the scene, such as vehicles.

00:00:31.304 --> 00:00:34.079
We use these rectangles,

00:00:34.079 --> 00:00:40.390
these regions of interest as the outline of the object in the 2D image coordinate system.

00:00:40.390 --> 00:00:45.049
We store this information in a data structure which we termed bounding box.

00:00:45.049 --> 00:00:47.989
So a bounding box actually has as a subset of

00:00:47.990 --> 00:00:51.590
all the data available within it in this struct,

00:00:51.590 --> 00:00:53.165
the region of interest,

00:00:53.164 --> 00:00:55.774
the rectangle inside the image.

00:00:55.774 --> 00:01:00.799
Later, we augment the bounding boxes by grouping lidar points in 3D space to it.

00:01:00.799 --> 00:01:04.384
So actually the bounding box is not only a bounding box in the 2D image,

00:01:04.385 --> 00:01:07.640
it's also a bounding box in the spatial domain,

00:01:07.640 --> 00:01:11.150
because it has received all those lidar points.

00:01:11.150 --> 00:01:13.300
Therefore, what we do is,

00:01:13.299 --> 00:01:17.524
by visualizing those bounding boxes in a specific way in this function,

00:01:17.525 --> 00:01:22.500
we make them appear as 3D objects in a top view perspective.

00:01:22.500 --> 00:01:24.769
But basically in a technical sense,

00:01:24.769 --> 00:01:28.204
the bounding boxes which have been augmented with 2D rectangles

00:01:28.204 --> 00:01:32.164
from optimization with yellow and lidar points in 3D space,

00:01:32.165 --> 00:01:34.310
they are the actual 3D objects,

00:01:34.310 --> 00:01:39.439
which we are going to track through the image sequence in the next part of this class.

00:01:39.439 --> 00:01:42.469
But for now, we want to visualize them only.

00:01:42.469 --> 00:01:43.984
So the first thing we do is,

00:01:43.984 --> 00:01:46.594
we create a top view image as we have done so before

00:01:46.594 --> 00:01:49.349
with the specific size three channels.

00:01:49.349 --> 00:01:52.849
The only difference is that we are now using a white background,

00:01:52.849 --> 00:01:54.934
before we have been using a black background.

00:01:54.935 --> 00:01:58.433
The next thing we do is we loop over all the bounding boxes,

00:01:58.433 --> 00:02:02.974
then we are creating a randomized color for each bounding box.

00:02:02.974 --> 00:02:05.959
This line here means that we are initializing

00:02:05.959 --> 00:02:09.859
the random number generator with a unique value here,

00:02:09.860 --> 00:02:11.960
which prevents us from

00:02:11.960 --> 00:02:15.950
repeating ourselves over and over with the same set of random numbers.

00:02:15.949 --> 00:02:20.359
This ensures that we will have a unique random number each time we pass this line,

00:02:20.360 --> 00:02:22.720
because all the box IDs are unique.

00:02:22.719 --> 00:02:27.139
Here the random color is actually generated by calling

00:02:27.139 --> 00:02:32.869
the uniform command on the random number generator in the range 0 which is black 250,

00:02:32.870 --> 00:02:34.159
which is a black shade of gray.

00:02:34.159 --> 00:02:36.574
So we do this in all three color bands,

00:02:36.574 --> 00:02:40.039
which gives us a unique color for every object.

00:02:40.039 --> 00:02:44.044
Now we are going to plot the lidar points into the top view image.

00:02:44.044 --> 00:02:46.939
So this loop here is actually familiar to you already,

00:02:46.939 --> 00:02:48.789
we loop over all the data points,

00:02:48.789 --> 00:02:52.159
and we take the world coordinates of

00:02:52.159 --> 00:02:57.620
the lidar sensor which has been already associated to this bounding box.

00:02:57.620 --> 00:02:59.450
Then those three lines here,

00:02:59.449 --> 00:03:02.149
what they do they store min-max values.

00:03:02.150 --> 00:03:04.700
We're going to use them later on for data output.

00:03:04.699 --> 00:03:06.889
But for now, by briefly looking at them,

00:03:06.889 --> 00:03:13.029
we store away the minimum value of all lidar points in driving direction in X direction,

00:03:13.030 --> 00:03:17.449
and we store the minimum and the maximum value in Y direction,

00:03:17.449 --> 00:03:18.560
which is left and right,

00:03:18.560 --> 00:03:22.900
which we'll use later to compute the object in space.

00:03:22.900 --> 00:03:25.520
But for now we only store them here.

00:03:25.520 --> 00:03:27.439
Then we create the top view coordinates.

00:03:27.439 --> 00:03:33.484
We have already talked about this here how this is done and why it looks like this here.

00:03:33.485 --> 00:03:36.320
Then we find the enclosing rectangle.

00:03:36.319 --> 00:03:39.769
So what we want to do is we want to not only draw the lidar point cloud,

00:03:39.770 --> 00:03:43.219
but we also want to draw an enclosing frame around it,

00:03:43.219 --> 00:03:48.539
which basically denotes the outer perimeter of the respective point cloud.

00:03:48.539 --> 00:03:53.209
Then we draw each individual points as a circle as we have done before in the image,

00:03:53.210 --> 00:03:54.935
using the randomized color,

00:03:54.935 --> 00:03:59.300
which associates all the lidar points to a specific object.

00:03:59.300 --> 00:04:02.320
You can easily see them in the image, what happens here.

00:04:02.319 --> 00:04:05.503
After that, we draw the enclosing rectangle,

00:04:05.503 --> 00:04:09.829
and then we augment all the objects with some key information.

00:04:09.830 --> 00:04:15.200
So this one here is basically the ID of the box,

00:04:15.199 --> 00:04:18.469
the number of points which have been associated to the lidar point cloud.

00:04:18.470 --> 00:04:21.860
The second is minimum distance in driving direction,

00:04:21.860 --> 00:04:26.300
and this one here is the width of the object in metric coordinates.

00:04:26.300 --> 00:04:30.650
So it's the difference between ywmax and ywmin,

00:04:30.649 --> 00:04:33.114
which is basically the width of the object.

00:04:33.115 --> 00:04:35.775
Afterwards, we simply plot all these as markers,

00:04:35.774 --> 00:04:37.279
which you have already seen before,

00:04:37.279 --> 00:04:39.514
and we display the image.

00:04:39.514 --> 00:04:43.819
Finally, the bWait flag is simply used for

00:04:43.819 --> 00:04:47.779
augmenting a display with several pieces of information.

00:04:47.779 --> 00:04:51.619
So if we only wanted to display our 3D objects,

00:04:51.620 --> 00:04:53.209
bWait would be true,

00:04:53.209 --> 00:04:55.549
because we wanted to wait and look at the image.

00:04:55.550 --> 00:04:57.350
But if we would use

00:04:57.350 --> 00:05:00.004
the augmented top view perspective with

00:05:00.004 --> 00:05:03.500
further information further down the line and the processing queue,

00:05:03.500 --> 00:05:07.564
then we would maybe wait until we wait for the user to press a key,

00:05:07.564 --> 00:05:10.819
and not do this but first put some pieces of information in.

00:05:10.819 --> 00:05:15.069
It's basically an aid for overlaying several pieces of information in the image.

00:05:15.069 --> 00:05:17.439
But for now, let's assume waitkey is 0,

00:05:17.439 --> 00:05:19.154
bWait would be true,

00:05:19.154 --> 00:05:24.799
and this entire code would display the results of the first part of this course,

00:05:24.800 --> 00:05:29.000
displaying 3D objects uniquely at at unique points in time.

00:05:29.000 --> 00:05:31.310
In the next part of this course,

00:05:31.310 --> 00:05:33.365
we want to look at ways to associate

00:05:33.365 --> 00:05:38.199
3D objects over time so we can track them through an image sequence.

00:05:38.199 --> 00:05:40.579
So congratulations, you have completed

00:05:40.579 --> 00:05:44.060
the last exercise from the section and all the lessons in the camera course,

00:05:44.060 --> 00:05:46.240
and now you're well prepared for the final project,

00:05:46.240 --> 00:05:47.449
which is about to come up.

00:05:47.449 --> 00:05:51.089
So get yourself a cup of your favorite beverage, and see you there.


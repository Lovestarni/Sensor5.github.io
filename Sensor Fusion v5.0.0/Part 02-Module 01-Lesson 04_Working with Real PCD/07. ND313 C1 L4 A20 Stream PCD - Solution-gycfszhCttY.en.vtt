WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.889
All right. Now let's go ahead and check out the solution for streaming PCD.

00:00:04.889 --> 00:00:07.469
So back here in the workspace then,

00:00:07.469 --> 00:00:11.009
I'm just going to make those changes that the classroom was talking about.

00:00:11.009 --> 00:00:14.984
So that first thing was an environment.cpp,

00:00:14.984 --> 00:00:20.144
I want to make the city block function have those additional arguments.

00:00:20.144 --> 00:00:23.559
So I'll go ahead and include those.

00:00:23.839 --> 00:00:27.620
So now I have the additional arguments for

00:00:27.620 --> 00:00:30.050
that point processor that I'm passing in so we don't have

00:00:30.050 --> 00:00:32.945
to create it every single time inside the function,

00:00:32.945 --> 00:00:36.590
and then I'm also passing in this in point Cloud.

00:00:36.590 --> 00:00:39.200
So now, I'm not going to create

00:00:39.200 --> 00:00:43.025
this point processor inside the function that's just being passed in.

00:00:43.024 --> 00:00:47.140
I don't have to worry about loading up that Cloud.

00:00:47.140 --> 00:00:51.109
So that'll just come in from the function as well.

00:00:51.109 --> 00:00:54.109
Here, I'm not going to use

00:00:54.109 --> 00:00:57.424
that recommendation in classroom for doing that constant reference or,

00:00:57.424 --> 00:00:59.109
I guess I could but,

00:00:59.109 --> 00:01:02.539
really I want to then create a new point Cloud,

00:01:02.539 --> 00:01:04.310
if I'm going to be doing that.

00:01:04.310 --> 00:01:07.189
But, here I'll just go ahead and I'll just keep

00:01:07.189 --> 00:01:11.539
reassigning in point Cloud. I think I'll be fine.

00:01:11.540 --> 00:01:15.250
So down here, in main,

00:01:15.250 --> 00:01:16.790
I'll just make those other changes.

00:01:16.790 --> 00:01:22.265
So I'm not going to be calling the city block function from here anymore.

00:01:22.265 --> 00:01:28.254
Instead, I'm going to go ahead and I'll be calling inside this frame update loop.

00:01:28.254 --> 00:01:33.619
Then what I'm doing here is I'm going to go ahead and create that point processors.

00:01:33.620 --> 00:01:36.890
Call it point processor I because it's dealing with intensity,

00:01:36.890 --> 00:01:41.575
point Clouds, sure, and I'm creating it on the stack.

00:01:41.575 --> 00:01:45.230
So that means every time I'm using a function I'm using the dot,

00:01:45.230 --> 00:01:48.605
and if I was on the heap I'd be using the arrow operator.

00:01:48.605 --> 00:01:51.320
Then I'm going to go ahead and create that stream.

00:01:51.319 --> 00:01:58.144
So point processorI.streamPCD, and that is looking at the folder data one,

00:01:58.144 --> 00:02:01.935
with our city block data.

00:02:01.935 --> 00:02:04.340
Then I am creating this iterator.

00:02:04.340 --> 00:02:07.640
So streamIterator and I start from the beginning.

00:02:07.640 --> 00:02:10.625
Then I'm creating this placeholder for my cloud.

00:02:10.625 --> 00:02:15.159
Then inside this while viewer has not stopped,

00:02:15.159 --> 00:02:18.914
I'm going to go ahead and viewer remove all point clouds,

00:02:18.914 --> 00:02:20.584
viewer remove all shapes.

00:02:20.585 --> 00:02:24.420
So it's nice and clean, to start out with.

00:02:24.419 --> 00:02:27.469
Then I'm going to go ahead and set up this pointcloudI,

00:02:27.469 --> 00:02:29.884
and so I just load that PCD,

00:02:29.884 --> 00:02:32.750
go ahead and dereference this stream iterator.

00:02:32.750 --> 00:02:37.865
That'll be containing that path then I convert it to a string.

00:02:37.865 --> 00:02:40.534
I'm all set for loading up that PCD.

00:02:40.534 --> 00:02:42.514
Then I just call city block,

00:02:42.514 --> 00:02:45.739
with that pointprocessorI that was created up here.

00:02:45.740 --> 00:02:50.310
Then that input point cloud that I just loaded up.

00:02:50.310 --> 00:02:53.284
Then go ahead and increment the stream iterator,

00:02:53.284 --> 00:02:54.409
if it ever hits the end,

00:02:54.409 --> 00:02:57.270
go ahead and reset it back to the beginning.

00:02:57.819 --> 00:03:01.310
Then I should be all good for that.

00:03:01.310 --> 00:03:05.599
Right now, I'm processing everything.

00:03:05.599 --> 00:03:07.879
So I'm going through filtering,

00:03:07.879 --> 00:03:10.259
I'm going through segmentation,

00:03:10.259 --> 00:03:11.594
I'm going through clustering,

00:03:11.594 --> 00:03:15.550
and then rendering all those so I can see what that looks like,

00:03:15.550 --> 00:03:17.719
if I didn't want to see what that looks like I can just render

00:03:17.719 --> 00:03:20.014
point cloud by itself and command all this out.

00:03:20.014 --> 00:03:23.314
I guess I could go through both.

00:03:23.314 --> 00:03:27.560
But let's go ahead and compile and see what it looks

00:03:27.560 --> 00:03:32.164
like now when we're doing obstacle detection frame by frame.

00:03:32.164 --> 00:03:40.574
Okay. Environment, right, it's actually pretty fast. It's nice.

00:03:40.574 --> 00:03:44.539
Cool. So, it's interesting and it looks like maybe we're

00:03:44.539 --> 00:03:48.259
just seeing the side of the wall here,

00:03:48.259 --> 00:03:51.289
or maybe that have to like see it in

00:03:51.289 --> 00:03:54.349
full view just to see what this object is right here.

00:03:54.349 --> 00:03:57.835
But, I don't believe that's a vehicle.

00:03:57.835 --> 00:04:00.645
Yeah. It's probably just going out a little bit too far,

00:04:00.645 --> 00:04:03.850
and it's thinking that's like a part truck or something,

00:04:03.849 --> 00:04:06.454
but I think it's probably just part of the wall.

00:04:06.455 --> 00:04:09.110
So, that's happening over here too.

00:04:09.110 --> 00:04:13.060
So some things they could do to play around with that are,

00:04:13.060 --> 00:04:17.644
you could actually change the crop box region that you're looking at.

00:04:17.644 --> 00:04:20.839
Or you can look at its dimensions here

00:04:20.839 --> 00:04:24.194
and you can start filtering based on them, the bounding box.

00:04:24.194 --> 00:04:27.949
So basically we see that the width of it is like

00:04:27.949 --> 00:04:32.180
very small so maybe you're not concerned with an object like that,

00:04:32.180 --> 00:04:36.530
or the box has to be some dimensions in order to be considered.

00:04:36.529 --> 00:04:39.169
So, those are some things to think about.

00:04:39.170 --> 00:04:42.410
It looks like we are grabbing that pole right here.

00:04:42.410 --> 00:04:45.215
But it's coming in and coming out.

00:04:45.214 --> 00:04:51.334
So you see that it's a certain frames are grabbing it and some frames are not,

00:04:51.334 --> 00:04:55.234
so we'll talk about that here in a little bit for tracking.

00:04:55.235 --> 00:04:58.490
But yeah, cool. So here's the results and we

00:04:58.490 --> 00:05:01.264
just set these hyperparameters up on the fly,

00:05:01.264 --> 00:05:03.464
and these are something, some hype,

00:05:03.464 --> 00:05:05.098
you play with the hyperparameters,

00:05:05.098 --> 00:05:08.254
you experiment with them and see what really works out well,

00:05:08.254 --> 00:05:10.670
and you can keep iterating on it

00:05:10.670 --> 00:05:13.305
until you get results that you're happy with and you're saying, "Yeah.

00:05:13.305 --> 00:05:14.689
I know all of these are consistent.

00:05:14.689 --> 00:05:15.785
All of these are vehicles.

00:05:15.785 --> 00:05:18.060
All of these are obstacles."

00:05:18.060 --> 00:05:19.774
Those are some things to look at.

00:05:19.774 --> 00:05:22.399
Here's this final result and this is where maybe

00:05:22.399 --> 00:05:25.699
those hyperparameters are more polished and you

00:05:25.699 --> 00:05:31.729
get the scene that you expect from cars and you consistently see this pole over here.

00:05:31.730 --> 00:05:37.200
So, you can play with those hyperparameters until you get something that looks like this.


WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.770
So your first task is finished and

00:00:01.770 --> 00:00:03.810
images are now organized and are in buffer. That's great.

00:00:03.810 --> 00:00:06.929
Then the second task we will focus on key points detection in

00:00:06.929 --> 00:00:09.179
the next step and the student version of the code we

00:00:09.179 --> 00:00:11.580
have the Shi-Tomasi detector implemented already.

00:00:11.580 --> 00:00:14.699
You have learned in the lesson previously that this method dates back to

00:00:14.699 --> 00:00:19.350
1994 and it can be quite slow because it is based on gradient image computation.

00:00:19.350 --> 00:00:21.220
Now in this part of the mid-term project,

00:00:21.219 --> 00:00:23.929
I would like you to implement the selection of alternatives to

00:00:23.929 --> 00:00:28.355
the Shi-Tomasi methods which are Harris which is also slow but also FAST,

00:00:28.355 --> 00:00:32.420
BRISK or AKAZE, FREAK and finally, the SIFT methods.

00:00:32.420 --> 00:00:33.649
All of those are available in

00:00:33.649 --> 00:00:36.484
the open CV and you should adjust the project code in a way that

00:00:36.484 --> 00:00:38.060
each one can be selected by setting

00:00:38.060 --> 00:00:41.300
the string detector type in the code to the respective name.

00:00:41.299 --> 00:00:45.809
Please note that all detectors should be added to the file matching2D_student.cpp.

00:00:45.880 --> 00:00:49.885
Let's take a look at the current implementation of the code.

00:00:49.884 --> 00:00:53.960
So here we are in the main file again and it's MidTermProject_Camera_Student.cpp.

00:00:53.960 --> 00:00:55.369
We have all the includes.

00:00:55.369 --> 00:00:56.750
We have the main program.

00:00:56.750 --> 00:00:59.869
We have the variable initialization.

00:00:59.869 --> 00:01:03.454
Then we have the main loop which runs over all the images.

00:01:03.454 --> 00:01:06.469
Images are loaded into a buffer and then comes

00:01:06.469 --> 00:01:09.530
the first student assignments which you by now have already completed.

00:01:09.530 --> 00:01:12.320
You have implemented the ring buffer and now comes

00:01:12.319 --> 00:01:15.379
the second part which is about detecting image key points.

00:01:15.379 --> 00:01:19.099
There we have the second student assignment which is your job now.

00:01:19.099 --> 00:01:22.234
We currently have the Shi-Tomasi detector which is detecting

00:01:22.234 --> 00:01:25.310
Shi-Tomasi key points and returning them into a data structure called

00:01:25.310 --> 00:01:29.180
key points and your job is it to enhance the selection

00:01:29.180 --> 00:01:33.205
of key point methods we have here by adding Harris,

00:01:33.204 --> 00:01:35.429
FAST, BRISK or AKAZE,

00:01:35.430 --> 00:01:38.465
FREAK and SIFT to be selectable here.

00:01:38.465 --> 00:01:40.040
You should be able to adjust

00:01:40.040 --> 00:01:43.800
the detector type accordingly and let's say I put FAST there.

00:01:44.379 --> 00:01:47.015
If L's branching here,

00:01:47.015 --> 00:01:51.019
the method of the algorithm should then be able to call on

00:01:51.019 --> 00:01:56.030
the FAST detector to load the key points into the same data structure here.

00:01:56.030 --> 00:02:01.299
Please put the key point methods into matching2D_Student.cpp.

00:02:01.340 --> 00:02:06.495
If you look into the header file matching2D.hpp,

00:02:06.495 --> 00:02:09.765
you can already see that key points Shi-Tomasi method here

00:02:09.764 --> 00:02:13.609
that's already something prepared for the Harris key points.

00:02:13.610 --> 00:02:15.995
If you recall it in the previous exercise,

00:02:15.995 --> 00:02:20.240
you already have written a method for finding Harris key points.

00:02:20.240 --> 00:02:24.370
So this could simply be added into this method here which you could implement.

00:02:24.370 --> 00:02:27.400
Then we have this one here, detKeypointsModern,

00:02:27.400 --> 00:02:29.990
which basically is the placeholder for everything

00:02:29.990 --> 00:02:33.080
you are supposed to do in this exercise.

00:02:33.080 --> 00:02:38.030
You should input a detector type and based on the content of this string,

00:02:38.030 --> 00:02:41.539
you should then output the respective key points and return them to

00:02:41.539 --> 00:02:45.625
the main information flow in MidTermProject_Camera_Student.cpp.

00:02:45.625 --> 00:02:48.710
So this is your second assignment.


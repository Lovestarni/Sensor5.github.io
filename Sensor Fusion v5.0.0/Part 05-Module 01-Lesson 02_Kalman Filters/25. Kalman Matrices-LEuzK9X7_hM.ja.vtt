WEBVTT
Kind: captions
Language: ja

00:00:00.000 --> 00:00:03.000
これが私のコードです

00:00:03.000 --> 00:00:08.000
このように入力できたとしたら非常に感心です

00:00:08.000 --> 00:00:14.000
なぜなら本来は数回の授業で学ぶ内容を
すでに理解したということです

00:00:14.000 --> 00:00:19.000
たった1回のクラスで要旨を理解し
コードを書いたのです

00:00:19.000 --> 00:00:22.000
このコードは本当に重要です

00:00:22.000 --> 00:00:27.300
自動運転車が他の車両を確認する時の
中心コードでもあります

00:00:27.300 --> 00:00:32.000
これが先ほど説明した各行ごとの実装です

00:00:32.000 --> 00:00:35.000
観測更新と予測があります

00:00:35.000 --> 00:00:38.000
行列クラスを思い出してください

00:00:38.000 --> 00:00:42.000
前ここまで段階的に説明したものと同じものです

00:00:42.000 --> 00:00:47.000
大切なことですが
n番目の観測の観測行列を作る必要があります

00:00:47.000 --> 00:00:50.000
式はこんな感じになるはずです

00:00:50.000 --> 00:00:55.000
エラーの計算に転置行列を持つ行列S

00:00:55.000 --> 00:00:58.000
逆数を持つカルマンゲインのK

00:00:58.000 --> 00:01:03.000
そして次の予測と観測更新に戻ります

00:01:03.000 --> 00:01:06.000
これが予測ステップです

00:01:06.000 --> 00:01:12.000
これらの2つの数式は
先ほど説明したものとまったく同じです

00:01:12.000 --> 00:01:18.000
これを使ってプログラミングするのは複雑ですが
もしできたのならすごいことです

00:01:18.000 --> 00:01:22.000
とても重要なことを達成したと言えます

00:01:22.000 --> 00:01:28.000
カルマンフィルタを理解し
多次元のカルマンフィルタを実装しました

00:01:28.000 --> 00:01:35.000
私が書いた機械的な行列クラスを使い
あなたが独力で実装したのです

00:01:35.000 --> 00:01:39.000
いい結果を出せたでしょう

00:01:39.000 --> 00:01:44.000
一連の推定位置1、2、3を予測し

00:01:44.000 --> 00:01:51.000
動く対象物の速度を理解できたと思います

00:01:51.000 --> 00:01:54.000
あなたが実装した数式です

00:01:54.000 --> 00:01:59.000
おめでとう
この先の基本となる知識を理解しましたね

00:01:59.000 --> 00:02:05.000
人工知能や自動運転車を作るには
必要不可欠な知識です

00:02:05.000 --> 00:02:09.000
他の車を見つける方法を実装したのです

00:02:09.000 --> 00:02:12.000
どういうことか説明しましょう

00:02:12.000 --> 00:02:16.000
これがGoogleの自動運転車で これが他の車です

00:02:16.000 --> 00:02:21.000
Googleの自動運転車の
フロントバンパーにはレーダがあり

00:02:21.000 --> 00:02:24.000
前の車両までの距離を測ります

00:02:24.000 --> 00:02:27.000
レーダは速度の推測も行います

00:02:27.000 --> 00:02:33.000
レーザも使いますが
他の車との距離は測っても速度は観測しません

00:02:33.000 --> 00:02:38.000
上から見てみると ここにGoogleの車があります

00:02:38.000 --> 00:02:41.000
地図上で位置推定されています

00:02:41.000 --> 00:02:45.000
ここに別の車両そしてもう1つ

00:02:45.000 --> 00:02:51.000
レーダとレーザを使って
自動運転車は距離を予測しているのです

00:02:51.000 --> 00:02:57.000
これらすべての車の速度を
カルマンフィルタを使って予測します

00:02:57.000 --> 00:03:01.000
レーザから得られる情報には
レンジデータもあります

00:03:01.000 --> 00:03:07.000
xとyの相対距離のような状態空間を使います

00:03:07.000 --> 00:03:11.000
xとyの相対的速度は状態遷移行列を得るのです

00:03:11.000 --> 00:03:17.000
それは他車が何かを調べるために紹介した行列です

00:03:17.000 --> 00:03:20.000
さて これがあなたが学びプログラムした内容です

00:03:20.000 --> 00:03:24.000
レーダとレーザからの
他車の位置の算出方法は教えませんでした

00:03:24.000 --> 00:03:28.000
対応問題があり車を見分けられないことがあります

00:03:28.000 --> 00:03:31.000
それについては深く説明しません

00:03:31.000 --> 00:03:36.000
解決方法の要点だけ説明を受け
それをプログラムすることができたのです

00:03:36.000 --> 00:03:42.000
こういう状況ならレーザやレーダデータのような
レンジデータを使います

00:03:42.000 --> 00:03:47.000
他車の瞬間観測を行う
有理アルゴリズムを思いつくでしょう

00:03:47.000 --> 00:03:51.000
場所の予測だけでなく速さの予測も行います

00:03:51.000 --> 00:03:55.000
おめでとう　本当にすごいことを成し遂げました

00:03:55.000 --> 00:03:59.000
これがプログラミングできたなら

00:03:59.000 --> 00:04:03.000
このコースの中で最も難しいことを
習得したと言えます

00:04:03.000 --> 00:04:05.000
本当におめでとう

